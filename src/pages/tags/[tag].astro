---
import type {
	InferGetStaticParamsType,
	InferGetStaticPropsType,
	MarkdownInstance,
} from "astro";
import BaseLayout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";

export async function getStaticPaths() {
	const allPosts = await getCollection("posts");

	const uniqueTags = [...new Set(allPosts.map((post) => post.data.tags).flat())];

	return uniqueTags.map((tag) => {
		const filteredPosts = allPosts.filter((post) => post.data.tags.includes(tag));
		return {
			params: { tag },
			props: { posts: filteredPosts },
		};
	});
}

type Params = InferGetStaticParamsType<typeof getStaticPaths>;
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { tag } = Astro.params as Params;
const { posts } = Astro.props;
---

<BaseLayout title={tag}>
	<p>Posts tagged with {tag}</p>
	<ul>
		{
			posts?.map((post) => (
				<li>
					<a href={post.slug}>{post.data.title}</a>
				</li>
			))
		}
	</ul>
</BaseLayout>
